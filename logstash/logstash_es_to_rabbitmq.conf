input {
  elasticsearch {
    hosts => ["https://es01:9200"]
    index => "logstash_user"
    user => "elastic"
    password => "student1"
    query => '{"query": {"range": {"@timestamp": {"gte": "now-10m/m", "lte": "now/m"}}}}'
    schedule => "* * * * *" # Every minute
    # ssl_enabled => true
    # ssl_certificate => "/usr/share/logstash/certs/ca/ca.crt"
    ssl_enabled => true
    ssl_certificate_verification => false
  }

  # jdbc {
  #   jdbc_connection_string => "jdbc:mysql://localhost:3306/userUUID"
  #   jdbc_user => "your_username"
  #   jdbc_password => "your_password"
  #   jdbc_driver_library => "/path/to/mysql-connector-java.jar"
  #   jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
  #   statement => "SELECT uuid_column FROM your_table WHERE uuid_column = :your_uuid_field"
  #   parameters => { "your_uuid_field" => "%{your_uuid_field}" }
  #   schedule => "*/5 * * * *"
  #   clean_run => true
  #   add_field => { "is_uuid_present" => true }
  #   tags => ["uuid_present"]
  # }
}

filter {
  # Optional: Add any filters here if you need to process the data before sending it to RabbitMQ.
}

# output {
#   rabbitmq {
#     host => "rabbitmq" # Your RabbitMQ host
#     port => 5672 # Default RabbitMQ port
#     user => "student"
#     password => "student1"
#     exchange => "logstash_exchange" # The exchange to publish to
#     exchange_type => "direct"
#     key => "logstash_key" # Routing key
#     durable => true
#     persistent => true
#     codec => "json"
#     ssl => false # Set to true if connecting to RabbitMQ over SSL/TLS
#     # Additional SSL options here if ssl => true
#   }
# }

output {
    http {
        url => "http://10.116.128.110:5000/webhook"
        http_method => "post"
        format => "json"
        content_type => "application/json"
      

    }
}
